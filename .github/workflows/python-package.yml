name: build

on:
  [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies / Lint / Run Tests
      run: |
        # INSTALL
        python -m pip install --upgrade pip
        python -m pip install codecov flake8
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh ;
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH=$HOME/miniconda/bin:$PATH
        hash -r
        conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
        conda update -n base -c defaults conda
        conda info -a
        conda env create --name xpresspipe -f requirements.yml
        source activate xpresspipe
        pip install .

        # LINT
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --statistics

        # RUN TESTS
        coverage run -a tests/test_arguments.py
        #coverage run -a tests/test_utils.py
        coverage run -a tests/test_bam.py
        coverage run -a tests/test_modifyGTF.py
        coverage run -a tests/test_truncateGTF.py
        coverage run -a tests/test_analysis.py
        coverage run -a tests/test_rrnaProbe.py
        coverage run -a tests/test_help.py
        coverage run -a tests/test_pipelines.py
        coverage report
        bash <(curl -s https://codecov.io/bash) -cF python
