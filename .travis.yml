# Set linux environments
language: python
python:
  - 2.7
  - 3.5
  - 3.6
  - 3.7
dist: xenial
env:
  - OS="linux"

# Set macos environments
matrix:
  include:
    - os: osx
      language: shell
      env:
        - PYTHON_VERSION=3.7
        - TRAVIS_PYTHON_VERSION=3.7
        - OS="macos"
    - os: osx
      language: shell
      env:
        - PYTHON_VERSION=3.6
        - TRAVIS_PYTHON_VERSION=3.6
        - OS="macos"
    - os: osx
      language: shell
      env:
        - PYTHON_VERSION=3.5
        - TRAVIS_PYTHON_VERSION=3.5
        - OS="macos"
    - os: osx
      language: shell
      env:
        - PYTHON_VERSION=2.7
        - TRAVIS_PYTHON_VERSION=2.7
        - OS="macos"

#Install Conda
before_install:
  - if [[ ("$TRAVIS_PYTHON_VERSION" == "2.7") && ("$OS" == "linux") ]]; then
        wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh ;
    elif [[ ("$TRAVIS_PYTHON_VERSION" == "2.7") && ("$OS" == "macos") ]]; then
        wget https://repo.anaconda.com/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh ;
    elif [[ ("$TRAVIS_PYTHON_VERSION" != "2.7") && ("$OS" == "linux") ]]; then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh ;
    elif [[ ("$TRAVIS_PYTHON_VERSION" != "2.7") && ("$OS" == "macos") ]]; then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh ;
    else
        echo -e "Incompatible Python version or OS option indicated\n" ;
        exit 1;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH=$HOME/miniconda/bin:$PATH
  - hash -r
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
  - conda info -a

# Install dependencies
install:
  - conda env create -n test --file requirements.yml
  - source activate test
  - conda info --envs
  - conda list
  - pip install codecov
  - pip install .
  - python setup.py install

# Run tests
script:
  - cd tests/
  # Build references
  - mkdir se_reference
  - mkdir pe_reference
  - cp -r test_reference se_reference
  - cp -r test_reference pe_reference
  - xpresspipe curateReference -o se_reference/ -f se_reference/ -g se_reference/transcripts.gtf -t 45 -m 10 --sjdbOverhang 49
  - xpresspipe curateReference -o pe_reference/ -f pe_reference/ -g pe_reference/transcripts.gtf -m 10
  # Run tests
  - coverage run test_utils.py
  - coverage run test_arguments.py
  - coverage run test_bam.py
  - coverage run test_flattenGTF.py
  - coverage run test_modifyGTF.py
  - coverage run test_truncateGTF.py
  - coverage run test_analysis.py
  - mkdir riboprof_out
  - coverage run test_pipelines.py

after_success:
  - codecov
